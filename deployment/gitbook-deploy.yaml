apiVersion: apps/v1     
kind: Deployment 
metadata:
  namespace: gitbook
  name: tcpdump-book 
spec:
  replicas: 3
  selector:                     
    matchLabels: 
      app: tcpdump-book 
  template:        
    metadata:
      labels: 
        app: tcpdump-book
    spec:   
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - tcpdump-book
            topologyKey: kubernetes.io/hostname
      containers:
      - name: tcpdump-book
        image: <IMAGE>:<BUILD_TAG>
        imagePullPolicy: IfNotPresent
        ports:
          - name: http
            containerPort: 80  
        readinessProbe:
          httpGet:
            path: /healthz
            port: 80
            httpHeaders:
            - name: X-Custom-Header
              value: healthz
          initialDelaySeconds: 5
          timeoutSeconds: 1
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
            httpHeaders:
            - name: X-Custom-Header
              value: healthz
          initialDelaySeconds: 3
          periodSeconds: 3
        resources:
          limits:
            cpu: 0.5
            memory: "500Mi"
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          name: config
          subPath: nginx.conf
        lifecycle:
          preStop:
            exec:
              command: ["/bin/bash", "-c", "sleep 10"]
      imagePullSecrets:
        - name: dockerhub
      volumes:
      - name: config
        configMap:
          name: configmap-nginx
